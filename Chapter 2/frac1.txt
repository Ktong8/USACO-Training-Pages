/*
ID: kevinca3
LANG: JAVA
TASK: frac1
*/
import java.io.*;
import java.util.*;

class frac1 {
	
	public static void main(String[] args) throws IOException {
		BufferedReader f = new BufferedReader(new FileReader("frac1.in"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("frac1.out")));
		StringTokenizer st = new StringTokenizer(f.readLine());
		int n = Integer.parseInt(st.nextToken());
		ArrayList<frac> fracs = new ArrayList<frac>();
		for(int i = 1; i<=n; i++){
			for(int j = 0; j<=i; j++){
				int common = gcd(j,i);
				if(common == 1){
					frac temp = new frac(j/common,i/common);
					fracs.add(temp);
				}
			}
		}
		Collections.sort(fracs);
		for(frac a:fracs){
			out.println(a.num + "/" + a.denom);
		}
		out.close();
	}
	
	public static int gcd(int a, int b){
		if(b==0){
			return a;
		}
		return gcd(b,a%b);
	}
	
	public static class frac implements Comparable<frac>{
		int num,denom;
		public frac(int num, int denom){
			this.num = num;
			this.denom = denom;
		}
		
		public int compareTo(frac other){
			int commonDenom = this.denom*other.denom/gcd(this.denom,other.denom);
			return((commonDenom/this.denom)*this.num) - ((commonDenom/other.denom)*other.num);
		}
	}
}