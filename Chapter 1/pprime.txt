/*
ID: kevinca3
LANG: JAVA
TASK: pprime
*/
import java.io.*;
import java.util.*;

class pprime {
	
	public static int a,b;
	public static ArrayList<Integer> pprimes;
	
	public static void main(String[] args) throws IOException {
		BufferedReader f = new BufferedReader(new FileReader("pprime.in"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("pprime.out")));
		StringTokenizer st = new StringTokenizer(f.readLine());
		String A = st.nextToken();
		String B = st.nextToken();
		a = Integer.parseInt(A);
		b = Integer.parseInt(B);
		pprimes = new ArrayList<Integer>();
		for(int i = A.length(); i<=B.length(); i++){
			switch(i){
				case 1: checkOnePrime();break;
				case 2: checkTwoPrime();break;
				case 3: checkThreePrime();break;
				case 4: checkFourPrime();break;
				case 5: checkFivePrime();break;
				case 6: checkSixPrime();break;
				case 7: checkSevenPrime();break;
				case 8: checkEightPrime();break;
			}
		}
		for(int i: pprimes){
			out.println(i);
		}
		out.close();
	}
	
	public static boolean checkPrime(int n){
		for(int i = 3; i<=Math.sqrt(n); i+=2){
			if(n%i == 0){
				return false;
			}
		}
		return true;
	}
	
	public static void checkOnePrime(){
		if(5>= a){
			pprimes.add(5);
		}
		if(7>=a && 7<=b){
			pprimes.add(7);
		}
	}
	
	public static void checkTwoPrime(){
		if(11>= a && 11<= b){
			pprimes.add(11);
		}
	}
	
	public static void checkThreePrime(){
		for(int i = 1; i<=9; i+=2){
			for(int j =0 ;j<=9; j++){
				int num = 101*i+10*j;
				if(num>=a && num<=b && checkPrime(num)){
					pprimes.add(num);
				}
			}
		}
	}
	
	public static void checkFourPrime(){
		for(int i = 1; i<=9; i+=2){
			for(int j =0 ;j<=9; j++){
				int num = 1001*i+110*j;
				if(num>=a && num<=b && checkPrime(num)){
					pprimes.add(num);
				}
			}
		}
	}
	
	public static void checkFivePrime(){
		for(int i = 1; i<=9; i+=2){
			for(int j =0 ;j<=9; j++){
				for(int k = 0; k<= 9; k++){
					int num = 10001*i+1010*j+100*k;
					if(num>=a && num<=b && checkPrime(num)){
						pprimes.add(num);
					}
				}
			}
		}
	}
	
	public static void checkSixPrime(){
		for(int i = 1; i<=9; i+=2){
			for(int j =0 ;j<=9; j++){
				for(int k = 0; k<= 9; k++){
					int num = 100001*i+10010*j+1100*k;
					if(num>=a && num<=b && checkPrime(num)){
						pprimes.add(num);
					}
				}
			}
		}
	}
	
	public static void checkSevenPrime(){
		for(int i = 1; i<=9; i+=2){
			for(int j =0 ;j<=9; j++){
				for(int k = 0; k<= 9; k++){
					for(int l = 0; l<= 9; l++){
						int num = 1000001*i+100010*j+10100*k+1000*l;
						if(num>=a && num<=b && checkPrime(num)){
							pprimes.add(num);
						}
					}
				}
			}
		}
	}
	
	public static void checkEightPrime(){
		for(int i = 1; i<=9; i+=2){
			for(int j =0 ;j<=9; j++){
				for(int k = 0; k<= 9; k++){
					for(int l = 0; l<= 9; l++){
						int num = 10000001*i+1000010*j+100100*k+11000*l;
						if(num>=a && num<=b && checkPrime(num)){
							pprimes.add(num);
						}
					}
				}
			}
		}
	}
}