/*
ID: kevinca3
LANG: JAVA
TASK: wormhole
*/
import java.io.*;
import java.util.*;

class wormhole {
	
	public static int num;
	public static int[] x,y,partner,next_on_right;
	public static void main(String[] args) throws IOException {
		BufferedReader f = new BufferedReader(new FileReader("wormhole.in"));
		PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("wormhole.out")));
		StringTokenizer st = new StringTokenizer(f.readLine());
		num = Integer.parseInt(st.nextToken());
		x = new int[num+1];
		y = new int[num+1];
		next_on_right = new int[num+1];
		partner = new int[num+1];
		for(int i = 1; i <= num; i++){
			st = new StringTokenizer(f.readLine());
			x[i] = Integer.parseInt(st.nextToken());
			y[i] = Integer.parseInt(st.nextToken());
		}
		for(int i = 1; i<= num; i++){
			for(int j = 1; j<= num; j++){
				if(x[j]>x[i] && y[i]==y[j]){
					if(next_on_right[i] == 0 || x[j]-x[i]<x[next_on_right[i]]-x[i]){
						next_on_right[i] = j;
					}
				}
			}
		}
		out.println(solve());
		out.close();
	}
	
	// count all solutions
	public static int solve(){
		int i=1;
		int total = 0;
		for(i = 1; i<=num; i++){
			if(partner[i] == 0){
				break;
			}
		}
		
		if(i>num){
			if(testCase()){
				return 1;
			}
			return 0;
		}
		for(int j = i+1; j<= num; j++){
			if(partner[j]==0){
				partner[i] = j;
				partner[j] = i;
				total += solve();
				partner[i] = 0;
				partner[j] = 0;
			}
		}
		return total;
	}
	
	public static boolean testCase(){
		for(int i = 1; i<= num; i++){
			int pos = i;
			for(int count = 0; count<num; count++){
				pos = next_on_right[partner[pos]];
			}
			if(pos != 0) return true;
		}
		return false;
	}
	
}